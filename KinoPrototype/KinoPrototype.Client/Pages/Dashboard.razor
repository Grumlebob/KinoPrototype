@page "/dashboard"
@using KinoPrototype.Domain

<h1>Dashboard</h1>


@if (joinEvents != null)
{
    foreach (var joinEvent in joinEvents)
    {
        <a href="https://localhost:7123/filling/@joinEvent.Id" >
            <div style="color: #191c1f;display: inline-block;  margin-right: 10px;border: 1px solid black; width: 200px;  padding: 5px; background-color: #c9ebf2">
                <h5 style=" overflow: hidden;text-overflow: ellipsis;white-space: nowrap; max-width: 290px;">@joinEvent.Title</h5>
              <p  style=" overflow: hidden;text-overflow: ellipsis;white-space: nowrap; max-width: 290px;">
                  @joinEvent.Description
              </p>

                <p>Deadline: @joinEvent.Deadline.ToString("dd/MM")</p>
                <p>Responses: @joinEvent.Participants.Count</p>
            </div>
        </a>
    }
 
}


@code {
    
    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; } = null!;
    
    List<JoinEvent> joinEvents = new List<JoinEvent>();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        var user = authState.User;
        var userId = user.FindFirst(c => c.Type == "sub")?.Value;
        
        HttpClient client = new HttpClient();
       
        var url = "https://localhost:7123/events/"+userId;
        
        joinEvents = await client.GetFromJsonAsync<List<JoinEvent>>(url);
    }

}